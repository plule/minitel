name: Continuous Integration

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  esp:
    name: ESP Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: esp-rs/xtensa-toolchain@v1.5
        with:
          default: true
          buildtargets: esp32
          ldproxy: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
      - name: Run command
        run: cargo build --release --config minitel-app-example/cargo-config-esp.toml --features esp -p minitel-app-example
      # clippy fails when using --config?
  desktop:
    name: Desktop Checks
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        action:
          - command: build
            args: --release
          - command: clippy
            args: -- -D warnings
          - command: doc
            args: --no-deps
          - command: test
            args: --release
          
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
      - name: Run command
        run: cargo ${{ matrix.action.command }} --features ws,ratatui --workspace --exclude minitel-esp ${{ matrix.action.args }}
  fmt:
    name: Fmt Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Enable caching
        uses: Swatinem/rust-cache@v2
      - name: Run command
        run: cargo fmt -- --check
